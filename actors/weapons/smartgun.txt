//SMARTGUN

Actor Smartgun_reloading : inventory { inventory.maxamount 1 }

actor Smartgun_3D : Smartgun replaces Smartgun
{
  states
  {
  Ready:
    SMRT A 0 ACS_NamedExecuteAlways("LOADDOWN", 0, 20, 56)
    SMRT A 1 A_WeaponReady
	SMRT A 0 A_PlaySound("SMRTDESL")
	SMRT A 0 A_Overlay(1001, "SmartHud")
    goto RealReady 
  RealReady:
    SMRT G 0 A_StopSound(1)
	SMRT G 0 A_SetSpeed (0.7)
    SMRT G 1 A_WeaponReady(WRF_ALLOWRELOAD)
	SMRT G 0 	
    loop
  RealReadyAlt:
    SMRT A 0 A_StopSound(1)
    SMRT A 1 A_WeaponReady(WRF_ALLOWRELOAD)
	SMRT A 0 	
    loop
  RealReadyEmpty:
    SMRT J 0 A_StopSound(1)
    SMRT J 1 A_WeaponReady(WRF_ALLOWRELOAD)
	SMRT J 0 	
    loop
  Dryfire:
  SMRT J 15 A_PlaySound("DRYFIRE", 1)
  Goto Reload
  Deselect:
    //SMRT A 0 A_SetCrosshair(0)
    SMRT A 1 A_Lower(12)
	SMRT A 0 A_StopSound(1)
    loop
  Select:
    SMRT A 0 A_JumpIfInventory("SmartAlt", 1, "Select2")
    //SMRT A 0 A_SetCrosshair(8)
    SMRT A 1 A_Raise(12)
    loop
  Select2:
    //SMRT A 0 A_SetCrosshair(0)
    SMRT A 1 A_Raise(12)
  Goto RealReadyAlt
  Fire:
  SMRT A 0 A_JumpIfNoAmmo("Dryfire")
  SMRT A 0 A_JumpIfInventory("SmartAlt", 1, "Fire2")
  SMRT A 0 A_Jump(256, "LockedOn")
	LockOnTarget:
	HoldFire:
	SMRT G 1 A_JumpIfTargetInLOS("LockedOn")
	Goto RealReady
	LockedOn:
	SMRT H 0 A_AlertMonsters
	SMRT H 0 Radius_Quake (1, 2, 0, 1, 0)
	//SMRT H 0 Bright A_Light1
	SMRT H 0 A_GunFlash
	SMRT H 0 A_PlaySound("SMARTLOOP", 1, 1, 1)
    SMRT H 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	SMRT H 1 BRIGHT A_FireProjectile("SmartgunTracer", random(-1, 1), 1, 7, -12, 0, random(1, -2))
	SMRT I 1 Bright
	SMRT I 0 Radius_Quake (1, 2, 0, 1, 0)
	SMRT H 1 BRIGHT A_FireProjectile("SmartgunTracer", random(-1, 1), 1, 7, -12, 0, random(-1, -3))
	SMRT I 1 Bright
    SMRT I 0 A_Refire
	SMRT G 0 A_StopSound(1)
	SMRT G 1 A_WeaponReady(1)
	//SMRT G 0 A_GunFLash
	SMRT G 5 A_WeaponReady(1)
	//SMRT G 0 A_GunFLash
	"####" # 0 A_JumpIf(GetCVAR("avw_weapons")==0, 6)
	"####" GGGGG 1 {
		A_FireProjectile("SmartgunBarrelSmoke",0,0,0,0,FPF_NOAUTOAIM,0);
		A_WeaponReady(1);
	}
     Goto RealReady
	SMRT G 5 A_WeaponReady(1)
     Goto RealReady 
	 Fire2:
	SMRT A 0 A_AlertMonsters
	SMRT A 0 Radius_Quake (1, 2, 0, 1, 0)
	//SMRT A 0 Bright A_Light1
	SMRT A 0 A_GunFlash
	SMRT A 0 A_PlaySound("SMARTLOOP", 1, 1, 1)
    SMRT A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	SMRT B 1 BRIGHT A_FireProjectile("SmartgunTracer2", random(-1, 1), 1, 7, -12, 0, random(1, -2))
	SMRT C 1 Bright
	SMRT B 0 Radius_Quake (1, 2, 0, 1, 0)
	SMRT B 1 BRIGHT A_FireProjectile("SmartgunTracer2", random(-1, 1), 1, 7, -12, 0, random(-1, -3))
	SMRT C 1 Bright
    SMRT C 0 A_Refire
	SMRT B 0 A_StopSound(1)
	SMRT A 1 A_WeaponReady(1)
	//SMRT A 0 A_GunFLash
	SMRT A 5 A_WeaponReady(1)
	//SMRT A 0 A_GunFLash
	"####" # 0 A_JumpIf(GetCVAR("avw_weapons")==0, 6)
	"####" AAAAA 1 {
		A_FireProjectile("SmartgunBarrelSmoke",0,0,0,0,FPF_NOAUTOAIM,0);
		A_WeaponReady(1);
	}
     Goto RealReadyAlt
	SMRT A 5 A_WeaponReady(1)
     Goto RealReadyAlt	 	
  AltFire:
	SMRT A 0
	SMRT A 0 A_JumpIfInventory("SmartAlt", 1, "AltFire2")
	SMRT A 0 A_GiveInventory("SmartAlt", 1)
	//SMRT A 0 A_SetCrosshair(0)
	SMRT A 20 A_PlaySound("SMARTUP")
	Goto RealReadyAlt
	
  AltFire2:
	SMRT G 0
	SMRT G 0 A_TakeInventory("SmartAlt", 1)
	//SMRT G 0 A_SetCrosshair(8)
	SMRT G 20 A_PlaySound("SMARTUP")
	Goto RealReady
	 
	 Reload:
    SMRT A 0 A_JumpIfInventory("SmartLoaded", 150, 2)
    SMRT A 0 A_JumpIfInventory("Smartgunbullets", 1, "ReloadWork")
    SMRT A 0
  Goto RealReady
	 ReloadWork:
	 /*
	 SMRT D 8 A_PlaySound("SMRTDESL", 1)
     SMRT E 2 Offset(0,35) 
     SMRT E 2 Offset(0,38)
     SMRT E 2 Offset(0,44)
	 SMRT F 2 Offset(0,48)
	 SMRT F 2 Offset(0,52)
	 SMRT F 18 Offset(0,56) A_PlaySound("SMARTOUT")
	 */
	 SMRR A 0 A_GiveInventory("Smartgun_reloading", 1)
	 SMRR ABCD 1
	 SMRR EFGHI 2
	 SMRR J 2 A_PlaySound("SMARTOUT")
	 SMRR KLMN 2
	 ReloadLoop:
     SMRR O 0 A_TakeInventory("Smartgunbullets", 1)
     SMRR O 0 A_GiveInventory("SmartLoaded", 1)
     SMRR O 0 A_JumpIfInventory("SmartLoaded", 150, "ReloadFinish")
     SMRR O 0 A_JumpIfInventory("Smartgunbullets", 1, "ReloadLoop")
  Goto ReloadFinish
     ReloadFinish:
	 /*
	 TNT1 A 0 A_JumpIfInventory("SmartAlt", 1, "ReloadFinish2")
     TNT1 A 0 
	 SMRT E 2 Offset(0,52) 
	 SMRT E 8 Offset(0,56) A_PlaySound("SMARTUP")
	 SMRT E 2 Offset(0,44)
     SMRT E 2 Offset(0,38)
     SMRT A 2 Offset(0,35)
	 */
	 SMRR O 12
	 SMRR P 2
	 SMRR Q 2 A_PlaySound("SMARTUP")
	 SMRR RSTU 2
	 SMRR VWXY 1
	 SMRR A 0 A_TakeInventory("Smartgun_reloading", 99)
	 SMRR Y 0 A_JumpIfInventory("SmartAlt", 1, "RealReadyAlt")
	 Goto RealReady
	 /*
	 ReloadFinish2:
     TNT1 A 0 
	 SMRT E 2 Offset(0,52) 
	 SMRT E 8 Offset(0,56) A_PlaySound("SMARTUP")
	 SMRT E 2 Offset(0,44)
     SMRT E 2 Offset(0,38)
     SMRT A 2 Offset(0,35)
	 Goto RealReadyAlt
	 */
  Flash:
	TNT1 A 0 A_JumpIf(GetCVAR("avw_weapons_mf")==1, "MuzzleFlash")
    TNT1 A 0 bright A_Light1
    TNT1 A 0 bright A_Light2
    Goto LightDone
  MuzzleFlash:
	SMMF A 0 A_Jump(128, "Flash2", "Flash3", "Flash4", "Flash5")
	SMMF ABAB 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash2:
	SMMF CDCD 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash3:
	SMMF ADAD 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash4:
	SMMF CBCB 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash5:
	SMMF EFEF 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  SmartHud:
	TNT1 A 0 A_JumpIfInventory("Smartgun_reloading", 1, "NoSmartHud")
	TNT1 A 0 A_JumpIfInventory("SmartAlt", 1, 2)
	SMHD A 1
	loop
	SMHD B 1
	loop
  NoSmartHud:
	TNT1 A 5
	TNT1 A 0 A_JumpIfInventory("Smartgun_reloading", 1, "NoSmartHud")
	goto SmartHud
  Spawn:
	SMTG A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==1, "Spawn3D")
    SMTG A 1
    stop
  Spawn3D:
	SMTG A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==0, "Spawn")
    SMTG P 1 Bright
    stop
  }
}


actor YutaniSmartgun_3D : YutaniSmartgun replaces YutaniSmartgun
{
  states
  {
  Ready:
    YMRT A 0 ACS_NamedExecuteAlways("LOADDOWN", 0, 20, 56)
    YMRT A 1 A_WeaponReady
	YMRT A 0 A_PlaySound("SMRTDESL")
	YMRT A 0 A_Overlay(1001, "SmartHud")
    goto RealReady 
  RealReady:
    YMRT G 0 A_StopSound(1)
	YMRT G 0 A_SetSpeed (0.7)
    YMRT G 1 A_WeaponReady(WRF_ALLOWRELOAD)
	YMRT G 0 	
    loop
  RealReadyAlt:
    YMRT A 0 A_StopSound(1)
    YMRT A 1 A_WeaponReady(WRF_ALLOWRELOAD)
	YMRT A 0 	
    loop
  RealReadyEmpty:
    YMRT J 0 A_StopSound(1)
    YMRT J 1 A_WeaponReady(WRF_ALLOWRELOAD)
	YMRT A 0 	
    loop
  Dryfire:
  YMRT J 15 A_PlaySound("DRYFIRE", 1)
  Goto Reload
  Deselect:
    //YMRT A 0 A_SetCrosshair(0)
    YMRT A 1 A_Lower(12)
	YMRT A 0 A_StopSound(1)
    loop
  Select:
    YMRT A 0 A_JumpIfInventory("SmartAlt", 1, "Select2")
    //YMRT A 0 A_SetCrosshair(8)
    YMRT A 1 A_Raise(12)
    loop
  Select2:
    //TNT1 A 0 A_SetCrosshair(0)
    YMRT A 1 A_Raise(12)
  Goto RealReadyAlt
  Fire:
  YMRT A 0 A_JumpIfNoAmmo("Dryfire")
  YMRT A 0 A_JumpIfInventory("SmartAlt", 1, "Fire2")
  YMRT A 0 A_Jump(256, "LockedOn")
	LockOnTarget:
	HoldFire:
	YMRT G 1 A_JumpIfTargetInLOS("LockedOn")
	Goto RealReady
	LockedOn:
	YMRT G 0 A_AlertMonsters
	YMRT G 0 Radius_Quake (1, 2, 0, 1, 0)
	//YMRT G 0 Bright A_Light1
	YMRT H 0 A_GunFlash
	YMRT G 0 A_PlaySound("SMARTLOOP", 1, 1, 1)
    YMRT G 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	YMRT H 1 BRIGHT A_FireProjectile("SmartgunTracer", random(-1, 1), 1, 7, -12, 0, random(1, -2))
	YMRT I 1 Bright
	YMRT I 0 Radius_Quake (1, 2, 0, 1, 0)
	YMRT H 1 BRIGHT A_FireProjectile("SmartgunTracer", random(-1, 1), 1, 7, -12, 0, random(-1, -3))
	YMRT I 1 Bright
    YMRT I 0 A_Refire
	YMRT G 0 A_StopSound(1)
	YMRT G 1 A_WeaponReady(1)
	//YMRT G 0 A_GunFLash
	YMRT G 5 A_WeaponReady(1)
	//YMRT G 0 A_GunFLash
	"####" # 0 A_JumpIf(GetCVAR("avw_weapons")==0, 6)
	"####" GGGGG 1 {
		A_FireProjectile("SmartgunBarrelSmoke",0,0,0,0,FPF_NOAUTOAIM,0);
		A_WeaponReady(1);
	}
     Goto RealReady
	YMRT G 5 A_WeaponReady(1)
     Goto RealReady 
	 Fire2:
	YMRT A 0 A_AlertMonsters
	YMRT A 0 Radius_Quake (1, 2, 0, 1, 0)
	//YMRT A 0 Bright A_Light1
	YMRT A 0 A_GunFlash
	YMRT A 0 A_PlaySound("SMARTLOOP", 1, 1, 1)
    YMRT A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	YMRT B 1 BRIGHT A_FireProjectile("SmartgunTracer2", random(-1, 1), 1, 7, -12, 0, random(1, -2))
    YMRT B 0 A_SetAngle(frandom(0, -0.5) + angle)
    YMRT B 0 A_SetPitch(-0.2 + pitch)
	YMRT C 1 Bright
	YMRT C 0 Radius_Quake (1, 2, 0, 1, 0)
	YMRT B 1 BRIGHT A_FireProjectile("SmartgunTracer2", random(-1, 1), 1, 7, -12, 0, random(-1, -3))
    YMRT B 0 A_SetAngle(frandom(0, -0.5) + angle)
    YMRT B 0 A_SetPitch(-0.2 + pitch)
	YMRT C 1 Bright
    YMRT C 0 A_Refire
	YMRT A 0 A_StopSound(1)
	YMRT A 1 A_WeaponReady(1)
	//TNT1 A 0 A_GunFLash
	YMRT A 5 A_WeaponReady(1)
	//TNT1 A 0 A_GunFLash
	"####" # 0 A_JumpIf(GetCVAR("avw_weapons")==0, 6)
	"####" AAAAA 1 {
		A_FireProjectile("SmartgunBarrelSmoke",0,0,0,0,FPF_NOAUTOAIM,0);
		A_WeaponReady(1);
	}
     Goto RealReadyAlt
	YMRT A 5 A_WeaponReady(1)
     Goto RealReadyAlt
		AltFire:
	YMRT A 0
	YMRT A 0 A_JumpIfInventory("SmartAlt", 1, "AltFire2")
	YMRT A 0 A_GiveInventory("SmartAlt", 1)
	//TNT1 A 0 A_SetCrosshair(0)
	YMRT A 20 A_PlaySound("SMARTUP")
	Goto RealReadyAlt
	
	AltFire2:
	YMRT A 0
	YMRT A 0 A_TakeInventory("SmartAlt", 1)
	//TNT1 A 0 A_SetCrosshair(8)
	YMRT G 20 A_PlaySound("SMARTUP")
	Goto RealReady
	 
	 Reload:
    YMRT A 0 A_JumpIfInventory("YSmartLoaded", 150, 2)
    YMRT A 0 A_JumpIfInventory("Smartgunbullets", 1, "ReloadWork")
    YMRT A 0
  Goto RealReady
	 ReloadWork:
	 /*
	 YMRT D 8 A_PlaySound("SMRTDESL", 1)
     YMRT E 2 Offset(0,35) 
     YMRT E 2 Offset(0,38)
     YMRT E 2 Offset(0,44)
	 YMRT F 2 Offset(0,48)
	 YMRT F 2 Offset(0,52)
	 YMRT F 18 Offset(0,56) A_PlaySound("SMARTOUT")
	 */
	 SMRR ABCD 1
	 SMRR EFGHI 2
	 SMRR J 2 A_PlaySound("SMARTOUT")
	 SMRR KLMN 2
	 ReloadLoop:
     YMRT O 0 A_TakeInventory("Smartgunbullets", 1)
     YMRT O 0 A_GiveInventory("YSmartLoaded", 1)
     YMRT O 0 A_JumpIfInventory("YSmartLoaded", 150, "ReloadFinish")
     YMRT O 0 A_JumpIfInventory("Smartgunbullets", 1, "ReloadLoop")
  Goto ReloadFinish
     ReloadFinish:
	 /*
	 TNT1 A 0 A_JumpIfInventory("SmartAlt", 1, "ReloadFinish2")
     TNT1 A 0 
	 YMRT E 2 Offset(0,52) 
	 YMRT E 8 Offset(0,56) A_PlaySound("SMARTUP")
	 YMRT E 2 Offset(0,44)
     YMRT E 2 Offset(0,38)
     YMRT A 2 Offset(0,35)
	 */
	 SMRR O 12
	 SMRR P 2
	 SMRR Q 2 A_PlaySound("SMARTUP")
	 SMRR RSTU 2
	 SMRR VWXY 1
	 SMRR Y 0 A_JumpIfInventory("SmartAlt", 1, "RealReadyAlt")
	 Goto RealReady
	 /*
	 ReloadFinish2:
     TNT1 A 0 
	 YMRT E 2 Offset(0,52) 
	 YMRT E 8 Offset(0,56) A_PlaySound("SMARTUP")
	 YMRT E 2 Offset(0,44)
     YMRT E 2 Offset(0,38)
     YMRT A 2 Offset(0,35)
	 Goto RealReadyAlt
	 */
  Flash:
	TNT1 A 0 A_JumpIf(GetCVAR("avw_weapons_mf")==1, "MuzzleFlash")
    TNT1 A 0 bright A_Light1
    TNT1 A 0 bright A_Light2
    Goto LightDone
  MuzzleFlash:
	SMMF A 0 A_Jump(128, "Flash2", "Flash3", "Flash4", "Flash5")
	SMMF ABAB 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash2:
	SMMF CDCD 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash3:
	SMMF ADAD 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash4:
	SMMF CBCB 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  Flash5:
	SMMF EFEF 1 A_Light2
    TNT1 A 1 bright A_Light1
    TNT1 A 1 bright A_Light0
    stop
  SmartHud:
	TNT1 A 0 A_JumpIfInventory("Smartgun_reloading", 1, "NoSmartHud")
	TNT1 A 0 A_JumpIfInventory("SmartAlt", 1, 2)
	SMHD A 1
	loop
	SMHD BC 1
	loop
  NoSmartHud:
	TNT1 A 5
	TNT1 A 0 A_JumpIfInventory("Smartgun_reloading", 1, "NoSmartHud")
	goto SmartHud
  Spawn:
	SMTG A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==1, "Spawn3D")
    SMTG A 1
    stop
  Spawn3D:
	SMTG A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==0, "Spawn")
    SMTG P 1 Bright
    stop
  }
}

ACTOR NewSmartgunspawner : Smartgunspawner replaces Smartgunspawner
{
	States
	{
	Spawn:
		SMTG A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==1, "Spawn3D")
		SMTG A 1
		Loop
	Spawn3D:
		SMTG A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==0, "Spawn")
		SMTG P 1 Bright
		Loop
	}
}