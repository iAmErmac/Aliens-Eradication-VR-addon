//PULSE RIFLE

actor PulseRifle_3D : PulseRifle replaces PulseRifle
{
   States
   {
   Ready:
    PULS A 0 ACS_NamedExecuteAlways("LOADDOWN", 0, 20, 56)
     //PULS A 0 A_JumpifInventory("NormalStance", 1, "RealReady")
	 //TNT1 A 0 A_JumpifInventory("IsSight", 1, "SightReady")	 
     //Loop
   RealReady:
     //TNT1 A 0 Bright A_ZoomFactor(1.0)
	 PULS A 0 A_SetSpeed (0.7)
	 //TNT1 A 0 A_SetCrosshair(0)
     PULS A 1 A_WeaponReady(WRF_ALLOWRELOAD)	 
     Goto Ready
	 /*
   SightReady:
     TNT1 A 0 Bright A_ZoomFactor(1.4)
	 TNT1 A 0 A_SetSpeed (0.35)
     TNT1 A 0 A_SetCrosshair(8)
     PRIS A 1 A_WeaponReady(WRF_ALLOWRELOAD)
     Goto Ready
	 */
   Deselect:
     //TNT1 A 0 Bright A_ZoomFactor(1.0)
	 PULS A 0 A_SetSpeed (0.7)
	 //TNT1 A 0 A_SetCrosshair(0)
	 //PULS A 0 A_TakeInventory("NormalStance", 1)
	 //TNT1 A 0 A_TakeInventory("IsSight", 1)
     PULS A 1 A_Lower(12)
	 PULS A 0 A_StopSound(1)
     Loop
   Select:
     //PULS A 0 A_GiveInventory("NormalStance", 1)
	 //TNT1 A 0 A_TakeInventory("IsSight", 1)
     PULS A 1 A_Raise(12)
     Loop
   Dryfire:
     //TNT1 A 0 A_JumpifInventory("IsSight", 1, "IronSightDryFire")
	 PULS A 15 A_PlaySound("DRYFIRE", 1)
	 Goto Reload
	 /*
   IronSightDryFire:
     PRIS A 15 A_PlaySound("DRYFIRE", 1)
     Goto Reload
	 */
   Fire:
	/*
     TNT1 A 0 A_JumpIfnoAmmo("Dryfire")
	 TNT1 A 0 A_JumpifInventory("IsSight", 1, "SightFire")
     TNT1 A 0 A_PlaySound("PULSELOOP", 1, 1, 1)
     TNT1 A 0 A_AlertMonsters
     TNT1 A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	 PULS B 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
	 PULS C 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
     TNT1 A 0 A_SetAngle(frandom(0, -0.25) + angle)
     TNT1 A 0 A_SetPitch(-0.25 + pitch)
	 //PRBF A 1 Bright A_Light2
	 PULS C 1 Bright A_Light(3)
	 PULS D 0 Bright A_GunFlash
     TNT1 B 0 A_ReFire
	 TNT1 B 0 A_StopSound(1)
	 */
     PULS A 0 A_JumpIfnoAmmo("Dryfire")
	 PULS A 0 A_GunFlash
     PULS A 0 A_PlaySound("PULSELOOP", 1, 1, 1)
     PULS A 0 A_AlertMonsters
     PULS A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	 PULS B 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
	 PULS C 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
	 PULS D 1 Bright A_Light(3)
     PULS A 0 A_ReFire
	 PULS A 0 A_StopSound(1)
	"####" # 0 A_JumpIf(GetCVAR("avw_weapons")==0, "Ready")
	"####" # 0 A_FireProjectile("RifleBarrelSmoke",0,0,0,0,FPF_NOAUTOAIM,0)
     Goto Ready
	 /*
	SightFire:
     TNT1 A 0 A_JumpIfnoAmmo("Dryfire")
     TNT1 A 0 A_PlaySound("PULSELOOP", 1, 1, 1)
     TNT1 A 0 A_AlertMonsters
     TNT1 A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	 PRIS B 1 Bright A_FireProjectile("HeavyTracer", 0, 1, 0, -4, 0, 1)
     PRIS C 1 Bright A_FireProjectile("HeavyTracer", 0, 1, 0, -4, 0, 1)
	 TNT1 A 0 A_SetAngle(frandom(0, -0.2) + angle)
     TNT1 A 0 A_SetPitch(-0.2 + pitch)
	 //PRIS A 1 Bright A_Light2
	 PRIS A 1 Bright A_Light(3)
	 TNT1 A 0 A_GunFlash
     TNT1 A 0 A_ReFire
	 TNT1 A 0 A_StopSound(1)
     Goto Ready
	 */
	 Reload:
     PULS A 0 A_JumpIfInventory("PulseLoaded", 95, 2)
     PULS A 0 A_JumpIfInventory("PulseRifleClip", 1, "ReloadWork")
     PULS A 0
     Goto Ready
	 ReloadWork:
	 //TNT1 A 0 Bright A_ZoomFactor(1.0)
	 PULS A 0 A_SetSpeed (0.7)
	 //TNT1 A 0 A_SetCrosshair(0)
	 //PULS A 0 A_GiveInventory("NormalStance", 1)
	 //TNT1 A 0 A_TakeInventory("IsSight", 1)
	 /*
	 PULS F 8 A_PlaySound("PULSREL1", 1)
	 PULS G 6
     PULS H 6
	 */
	 PLSR AB 2
	 PLSR C 2 A_PlaySound("PULSREL1", 1)
	 PLSR DEFGH 2
	  ReloadLoop:
     PLSR I 0 A_TakeInventory("PulseRifleClip", 1)
     PLSR I 0 A_GiveInventory("PulseLoaded", 1)
     PLSR I 0 A_JumpIfInventory("PulseLoaded", 95, "ReloadFinish")
     PLSR I 0 A_JumpIfInventory("PulseRifleClip", 1, "ReloadLoop")
     Goto ReloadFinish
     ReloadFinish:
	 /*
	 PULS H 8 A_PlaySound("PULSREL2")
     TNT1 A 0 
	 PULS H 2
	 PULS G 3
	 PULS F 2
     PULS A 10
	 */
	 PLSR I 9
	 PLSR JKL 2
	 PLSR M 2 A_PlaySound("PULSREL2")
	 PLSR NO 2
	 PLSR PQRSTUVW 1
     Goto Ready 
    AltFire:
	 PULS A 0 A_JumpIfInventory("GrenadeAmmo", 1, "GrenadeFire")
     //TNT1 A 0 A_JumpifInventory("IsSight", 1, "IronSightDryFire")
	 PULS A 15 A_PlaySound("DRYFIRE")
	 Goto Ready
	GrenadeFire:
	/*
	 TNT1 A 0 A_JumpifInventory("IsSight", 1, "SightGrenade")
	 TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
     PULS A 1 A_PlaySound("weapons/pulsegren",CHAN_AUTO)
     TNT1 A 0 
	 PULS A 1 A_FireCustomMissile ("PulseGrenade", 0, 0, 0, 0) 
	 PULS A 1 Offset(-1,38)
 	 PULS A 1 Offset(-1,42)
     PULS F 2 
	 PULS F 1 Offset(-1,34) A_PlaySound("PULSREL3",CHAN_AUTO)
     PULS I 8 Offset(-1,34)
	 PULS I 3 Offset(-3,48)
	 PULS F 2
	 */
	 PULS A 0 A_TakeInventory("GrenadeAmmo", 1)
	 YULS E 0 A_GunFlash
	 PULS E 0 A_PlaySound("weapons/pulsegren",CHAN_AUTO)
	 PULS E 0 A_FireCustomMissile ("PulseGrenade", 0, 0, 0, 0)
	 PULS EFGHI 2
	 PULS J 2 A_PlaySound("PULSREL3",CHAN_AUTO)
	 PULS KLMN 2
	 PULS A 10
     Goto Ready
	 /*
	SightGrenade:
	 TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
     PRIS A 4 A_PlaySound("weapons/pulsegren",CHAN_AUTO)
     TNT1 A 0 
	 PRIS A 1 Offset(0,38) A_FireCustomMissile ("PulseGrenade", 0, 0, 0, 0) 
	 PRIS A 1 Offset(0,44)
     PRIS A 1 Offset(0,48)
     PRIS A 1 Offset(0,40)
	 PRIS A 6 Offset(0,32)
	 TNT1 A 0 A_PlaySound("PULSREL3",CHAN_AUTO)
	 PRIS A 1 Offset(0,35)
     PRIS A 1 Offset(0,38)
     PRIS A 1 Offset(0,44)
	 PRIS A 1 Offset(0,48)
     PRIS A 1 Offset(0,48)
     PRIS A 1 Offset(0,44)
     PRIS A 1 Offset(0,38)
     PRIS A 1 Offset(0,35)
	 PRIS A 1 Offset(0,32)
	 PRIS A 14
     Goto Ready
	 */
   Flash:
	 TNT1 A 0 A_JumpIf(GetCVAR("avw_weapons_mf")==1, "MuzzleFlash")
     TNT1 A 0 Bright A_Light1
     TNT1 B 0 Bright A_Light2
     Goto LightDone
   MuzzleFlash:
     PLMF A 1 Bright A_Light1
     PLMF B 1 Bright A_Light2
     PLMF C 1 Bright
     TNT1 A 1 A_Light1
     TNT1 A 1 A_Light0
	 Stop
   AltFlash:
	 TNT1 A 0 A_JumpIf(GetCVAR("avw_weapons_mf")==1, "AltMuzzleFlash")
	 Stop
   AltMuzzleFlash:
     PLMF DE 1 Bright A_Light1
     TNT1 A 1 A_Light0
	 Stop
   Spawn:
	 PLSP A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==1, "Spawn3D")
     PLSP A 1
     Stop
   Spawn3D:
	 PLSP A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==0, "Spawn")
     PLSP P 1 Bright
     Stop
   }
}


actor YutaniRifle_3D : YutaniRifle replaces YutaniRifle
{
   States
   {
   Ready:
    YULS A 0 ACS_NamedExecuteAlways("LOADDOWN", 0, 20, 56)
     //YULS A 0 A_JumpifInventory("NormalStance", 1, "RealReady")
	 //TNT1 A 0 A_JumpifInventory("IsSight", 1, "SightReady")	 
     //Loop
   RealReady:
     //TNT1 A 0 Bright A_ZoomFactor(1.0)
	 YULS A 0 A_SetSpeed (0.7)
	 //TNT1 A 0 A_SetCrosshair(0)
     YULS A 1 A_WeaponReady(WRF_ALLOWRELOAD)	 
     Goto Ready
	 /*
   SightReady:
     TNT1 A 0 Bright A_ZoomFactor(1.4)
	 TNT1 A 0 A_SetSpeed (0.35)
     TNT1 A 0 A_SetCrosshair(8)
     PRIS A 1 A_WeaponReady(WRF_ALLOWRELOAD)
     Goto Ready
	 */
   Deselect:
     //TNT1 A 0 Bright A_ZoomFactor(1.0)
	 YULS A 0 A_SetSpeed (0.7)
	 //TNT1 A 0 A_SetCrosshair(0)
	 //YULS A 0 A_TakeInventory("NormalStance", 1)
	 //TNT1 A 0 A_TakeInventory("IsSight", 1)
     YULS A 1 A_Lower(12)
	 YULS A 0 A_StopSound(1)
     Loop
   Select:
     //YULS A 0 A_GiveInventory("NormalStance", 1)
     YULS A 1 A_Raise(12)
     Loop
   Dryfire:
     //TNT1 A 0 A_JumpifInventory("IsSight", 1, "IronSightDryFire")
	 YULS A 15 A_PlaySound("DRYFIRE", 1)
	 Goto Reload
	 /*
   IronSightDryFire:
     PRIS A 15 A_PlaySound("DRYFIRE", 1)
     Goto Reload
	 */
   Fire:
	/*
     TNT1 A 0 A_JumpIfnoAmmo("Dryfire")
     TNT1 A 0 A_JumpifInventory("NormalStance", 1, 2)
	 //TNT1 A 0 A_JumpifInventory("IsSight", 1, "SightFire")
     TNT1 A 0 A_PlaySound("PULSELOOP", 1, 1, 1)
     TNT1 A 0 A_AlertMonsters
     TNT1 A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	 YULS B 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
	 YULS C 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
     TNT1 A 0 A_SetAngle(frandom(0, -0.25) + angle)
     TNT1 A 0 A_SetPitch(-0.25 + pitch)
	 PRBF A 1 Bright A_Light2
	 YULS C 1 Bright A_Light(3)
	 YULS D 0 Bright A_GunFlash
     TNT1 A 0 A_ReFire
	 TNT1 A 0 A_StopSound(1)
	 */
     YULS A 0 A_JumpIfnoAmmo("Dryfire")
	 YULS A 0 A_GunFlash
     YULS A 0 A_PlaySound("PULSELOOP", 1, 1, 1)
     YULS A 0 A_AlertMonsters
     YULS A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	 YULS B 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
	 YULS B 1 Bright A_FireProjectile ("HeavyTracer", random(-1, 1), 1, 5, -5, 0, random(-1, -2))
	 YULS C 1 Bright A_Light2
	 YULS D 1 Bright A_Light(3)
     YULS A 0 A_ReFire
	 YULS A 0 A_StopSound(1)
	"####" # 0 A_JumpIf(GetCVAR("avw_weapons")==0, "Ready")
	"####" # 0 A_FireProjectile("RifleBarrelSmoke",0,0,0,0,FPF_NOAUTOAIM,0)
     Goto Ready
	 /*
	SightFire:
     TNT1 A 0 A_JumpIfnoAmmo("Dryfire")
     TNT1 A 0 A_PlaySound("PULSELOOP", 1, 1, 1)
     TNT1 A 0 A_AlertMonsters
     TNT1 A 0 A_FireCustomMissile("DummyProjectile4", 0, 0, 0, 0, 0, 0)
	 PRIS B 1 Bright A_FireProjectile("HeavyTracer", 0, 1, 0, -4, 0, 1)
     PRIS C 1 Bright A_FireProjectile("HeavyTracer", 0, 1, 0, -4, 0, 1)
	 TNT1 A 0 A_SetAngle(frandom(0, -0.2) + angle)
     TNT1 A 0 A_SetPitch(-0.2 + pitch)
	 PRIS A 1 Bright A_Light2
	 PRIS A 1 Bright A_Light(3)
	 TNT1 A 0 A_GunFlash
     TNT1 A 0 A_ReFire
	 TNT1 A 0 A_StopSound(1)
     Goto Ready
	 */
	 Reload:
     TNT1 A 0 A_JumpIfInventory("YPulseLoaded", 95, 2)
     TNT1 A 0 A_JumpIfInventory("PulseRifleClip", 1, "ReloadWork")
     TNT1 A 0
     Goto Ready
	 ReloadWork:
	 //TNT1 A 0 Bright A_ZoomFactor(1.0)
	 TNT1 A 0 A_SetSpeed (0.7)
	 //TNT1 A 0 A_SetCrosshair(0)
	 //TNT1 A 0 A_GiveInventory("NormalStance", 1)
	 //TNT1 A 0 A_TakeInventory("IsSight", 1)
	 /*
	 YULS F 8 A_PlaySound("PULSREL1", 1)
	 YULS G 6
     YULS H 6
	 */
	 PLSR AB 2
	 PLSR C 2 A_PlaySound("PULSREL1", 1)
	 PLSR DEFGH 2
	  ReloadLoop:
     PLSR I 0 A_TakeInventory("PulseRifleClip", 1)
     PLSR I 0 A_GiveInventory("YPulseLoaded", 1)
     PLSR I 0 A_JumpIfInventory("YPulseLoaded", 95, "ReloadFinish")
     PLSR I 0 A_JumpIfInventory("PulseRifleClip", 1, "ReloadLoop")
     Goto ReloadFinish
     ReloadFinish:
	 /*
	 YULS H 8 A_PlaySound("PULSREL2")
     TNT1 A 0 
	 YULS H 2
	 YULS G 3
	 YULS F 2
     YULS A 10
	 */
	 PLSR I 9
	 PLSR JKL 2
	 PLSR M 2 A_PlaySound("PULSREL2")
	 PLSR NO 2
	 PLSR PQRSTUVW 1
     Goto Ready 
    AltFire:
	 YULS A 0 A_JumpIfInventory("GrenadeAmmo", 1, "GrenadeFire")
     //TNT1 A 0 A_JumpifInventory("IsSight", 1, "IronSightDryFire")
	 YULS A 15 A_PlaySound("DRYFIRE")
	 Goto Ready
	GrenadeFire:
	/*
	 TNT1 A 0 A_JumpifInventory("IsSight", 1, "SightGrenade")
	 TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
     YULS A 1 A_PlaySound("weapons/pulsegren",CHAN_AUTO)
     TNT1 A 0 
	 YULS A 1 A_FireCustomMissile ("PulseGrenade", 0, 0, 0, 0) 
	 YULS A 1 Offset(-1,38)
 	 YULS A 1 Offset(-1,42)
     YULS F 2 
	 YULS F 1 Offset(-1,34) A_PlaySound("PULSREL3",CHAN_AUTO)
     YULS I 8 Offset(-1,34)
	 YULS I 3 Offset(-3,48)
	 YULS F 2
	 */
	 YULS A 0 A_TakeInventory("GrenadeAmmo", 1)
	 YULS E 0 A_GunFlash
	 YULS E 0 A_PlaySound("weapons/pulsegren",CHAN_AUTO)
	 YULS E 0 A_FireCustomMissile ("PulseGrenade", 0, 0, 0, 0)
	 YULS EFGHI 2
	 YULS J 2 A_PlaySound("PULSREL3",CHAN_AUTO)
	 YULS KLMN 2
	 YULS A 10
     Goto Ready
	 /*
	SightGrenade:
	 TNT1 A 0 A_TakeInventory("GrenadeAmmo", 1)
     PRIS A 4 A_PlaySound("weapons/pulsegren",CHAN_AUTO)
     TNT1 A 0 
	 PRIS A 1 Offset(0,38) A_FireCustomMissile ("PulseGrenade", 0, 0, 0, 0) 
	 PRIS A 1 Offset(0,44)
     PRIS A 1 Offset(0,48)
     PRIS A 1 Offset(0,40)
	 PRIS A 6 Offset(0,32)
	 TNT1 A 0 A_PlaySound("PULSREL3",CHAN_AUTO)
	 PRIS A 1 Offset(0,35)
     PRIS A 1 Offset(0,38)
     PRIS A 1 Offset(0,44)
	 PRIS A 1 Offset(0,48)
     PRIS A 1 Offset(0,48)
     PRIS A 1 Offset(0,44)
     PRIS A 1 Offset(0,38)
     PRIS A 1 Offset(0,35)
	 PRIS A 1 Offset(0,32)
	 PRIS A 14
	 */
     Goto Ready
   Flash:
	 TNT1 A 0 A_JumpIf(GetCVAR("avw_weapons_mf")==1, "MuzzleFlash")
     TNT1 A 0 Bright A_Light1
     TNT1 B 0 Bright A_Light2
     Goto LightDone
   MuzzleFlash:
     PLMF A 1 Bright A_Light1
     PLMF B 1 Bright A_Light2
     PLMF C 1 Bright
     TNT1 A 1 A_Light1
     TNT1 A 1 A_Light0
	 Stop
   AltFlash:
	 TNT1 A 0 A_JumpIf(GetCVAR("avw_weapons_mf")==1, "AltMuzzleFlash")
	 Stop
   AltMuzzleFlash:
     PLMF DE 1 Bright A_Light1
     TNT1 A 1 A_Light0
	 Stop
   Spawn:
	 PLSP A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==1, "Spawn3D")
     PLSP A 1
     Stop
   Spawn3D:
	 PLSP A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==0, "Spawn")
     PLSP P 1 Bright
     Stop
   }
}

ACTOR NewPulsespawner : Pulsespawner replaces Pulsespawner
{
	States
	{
	Spawn:
		PLSP A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==1, "Spawn3D")
		PLSP A 1
		Loop
	Spawn3D:
		PLSP A 0 A_JumpIf(GetCVAR("avw_pickupmodel")==0, "Spawn")
		PLSP P 1 Bright
		Loop
	Pickup.ColonistClass:
		TNT1 A 0 A_GiveInventory("PulseRifle_3D",1)
		Stop
	Pickup.MercenaryClass:
		TNT1 A 0 A_GiveInventory("PulseRifle_3D",1)
		Stop
	Pickup.YutaniClass:
		TNT1 A 0 A_GiveInventory("YutaniRifle_3D",1)
		Stop
	Pickup.SyntheticClass:
		TNT1 A 0 A_GiveInventory("PulseRifle_3D",1)
		Stop
	}
}